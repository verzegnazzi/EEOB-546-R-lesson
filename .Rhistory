2+2
9/2
x
x=1/40
x
summary(cars)
plot(pressure)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: cars
summary(cars)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: cars
summary(cars)
plot(pressure)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: cars
summary(cars)
plot(pressure)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: cars
summary(cars)
x <- 5
str(x)
x
x <- c(5,3,2,1)
x
x <- c(5,3,2,1)
x
y <- 1:10
y
x <- c(5,3,2,1)
x
y <- 1:10
y
Y+2
x <- c(5,3,2,1)
x
y <- 1:10
y
y+2
x <- c(5,3,2,1)
x
y <- 1:10
y
y+2
x + y
x <- c(5,3,2,1)
x
y <- 1:10
x + y
2^(1:5)
x <- c(5,3,2,1)
x
y <- 1:10
x + y
x^(1:4)
x <- 1:2
x^(1:4)
(1:4)^x
2^(1:5)
2^(1:5)
ls()
2^(1:5)
2^(1:5)
ls()
rm
c(1, c(2, c(3, 4)))
x <-  c(FALSE, FALSE, TRUE)
y <- c(1,2,3,4,5,6)
x + Y
as.character(x)
mtcars
mtcars
str(mtcars)
is.list(mtcars
is.list(mtcars)
is.list(mtcars)
df <- data.frame(x = 1:3, y = c("a", "b", "c"))
str(df)
str(df)
View(df)
df <- data.frame(
x = 1:3,
y = c("a", "b", "c"),
stringsAsFactors = FALSE)
str(df)
str(df)
df <- data.frame(
x = 1:3,
y = c("a", "b", "c"),
stringsAsFactors = FALSE)
str(df)
as.matrix(df)
df1 <- data.frame(x = 1:3, y= 0), stringsAsFactors = FALSE)
str(df1)
df1 <- data.frame(x = 1:3, y= 0) stringsAsFactors = FALSE)
str(df1)
df <- data.frame(
x = 1:3,
y = c("a", "b", "c"),
stringsAsFactors = FALSE)
str(df)
attributes(df)
View(df)
as.matrix(df)
as.matrix(df)
as.data.frame(as.matrix(df))
as.data.frame(as.matrix(df)), stringsAsFactors = F)
as.data.frame(as.matrix(df), stringsAsFactors = F)
x <- c(5.4, 6.2, 7.1, 4.8, 7.5)
names(x) <- c('a', 'b', 'c', 'd', 'e')
x
x{1}
X{4}
x[1]
X[4]
X[4]
x[4]
x[1:4]
x[c(1,1,3)]
x[6]
x <- c(5.4, 6.2, 7.1, 4.8, 7.5, 7.2)
names(x) <- c('a', 'b', 'c', 'd', 'e')
x
x[6]
names(x)[6] <- c("f")
x
x
x > 6
x[x >6]
x[x > mean (x)]
mean(x)
lst <- list(1:3, "a", c(TRUE, FALSE, TRUE), c(2.3, 5.9))
names(lst) <- c("A","B","C","D")
lst[1]
lst <- list(1:3, "a", c(TRUE, FALSE, TRUE), c(2.3, 5.9))
names(lst) <- c("A","B","C","D")
lst
lst[1]
strt(lst[1])
str(lst[1])
str(lst[[1]])
str(lst$A)
lst$A
df <- data.frame(
x = 1:3,
y = c("a", "b", "c"),
z = c(TRUE,FALSE,TRUE),
stringsAsFactors = FALSE)
str(df)
df <- data.frame(
x = 1:3,
y = c("a", "b", "c"),
z = c(TRUE,FALSE,TRUE),
stringsAsFactors = FALSE)
str(df)
df$y
df[2]
str(df[2])
df[2,3]
df[2,]
if (!require("tidyverse")) install.packages("tidyverse")
library("tidyverse")
fang <- read.delim("fang_et_al_genotypes.txt")
snp <- read.delim("snp_position.txt")
head(fang)
download.file("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt", destfile = "data/Dataset_S1.txt")
dvst <- read_csv("data/Dataset_S1.txt")
dvst <- read_csv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt")
library("tidyverse")
dvst <- read_csv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt")
dvst
dvst
View(dvst)
colnames(dvst)
colnames(dvst)[12] <- "percent.GC" #rename X.GC columns
colnames(dvst)
summary(dvst$`total SNPs`)
# or with dplyr
summary(select(dvst,`total SNPs`)) #this does not look simpler, but wait...
filter(dvst,`total SNPs` >= 85)
filter(dvst, Pi > 16, percent.GC > 80)
filter(dvst, is.na(Divergence))
filter(dvst, percent.GC > 1000)
summary(dvst$`percent,GC`)
summary(select(dvst,`percent,GC`))
summary(select(dvst, percent,GC))
summary(select(dvst, percent.GC))
filter(dvst, percent.GC > 85)
filter(dvst, percent.GC < 1)
filter(dvst,`total SNPs` >= 0)
filter(dvst,`total SNPs` <= 0)
filter(dvst, percent.GC > 85)
filter(dvst, percent.GC > 85)
filter(dvst, percent.GC < 1)
summary(select(dvst, percent.GC))
View(dvst)
filter(dvst,`total SNPs` <= 0)
filter(dvst,`total SNPs` <= 0)
filter(dvst, between(`total SNPs`, 50, 60))
filter(dvst, between(`percent,GC`, 39, 49))
filter(dvst, between(`percent.GC`, 39, 49))
mutate(dvst, cent = start >= 25800000 & end <= 29700000)
View(dvst)
mutate(dvst, cent = start >= 25800000 & end <= 29700000)
addcolumn <-  mutate(dvst, cent = start >= 25800000 & end <= 29700000)
View(addcolumn)
addcolumn <-  mutate(dvst, cent = start >= 25800000 & end <= 29700000) %>% filter(cent == TRUE)
View(addcolumn)
dvst %>% by_cent <- group_by(dvst, cent) %>% summarise(by_cent, GC = mean(percent.GC, na.rm = TRUE), averageSNPs=mean(`total.SNPs`, na.rm = TRUE), allSNPs=sum(`total.SNPs`))
library(tidyverse)
if (!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
if (!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
library("ggplot2", lib.loc="~/R/win-library/3.5")
dvst <- read_csv("https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/Dataset_S1.txt")
(dvst <- dvst %>%
mutate(diversity = Pi / (10*1000), cent = (start >= 25800000 & end <= 29700000)) %>%
rename(percent.GC = `%GC`, total.SNPs = `total SNPs`, total.Bases = `total Bases`, reference.Bases = `reference Bases`))
dvst <- mutate(dvst, position = (end + start) / 2)
ggplot(data = dvst) + geom_point(mapping=aes(x=position, y=diversity))
ggplot(data = dvst) + geom_point(mapping = aes(x=position, y=diversity, color=cent))
View(dvst)
# Left
ggplot(data = dvst) +
geom_point(mapping = aes(x = position, y = diversity, alpha = cent))
# Right
ggplot(data = dvst) +
geom_point(mapping = aes(x = position, y = diversity, shape = cent))
ggplot(data = dvst) +
geom_point(mapping = aes(x = position, y = diversity), color = "blue")
ggplot(data = dvst) + geom_point(mapping = aes(x = position, y = diversity, color = "blue"))
ggplot(data = dvst) + geom_point(mapping = aes(x = position, y = diversity) color = "blue")
ggplot(data = dvst) + geom_point(mapping = aes(x = position, y = diversity), color = "blue")
ggplot(data = dvst) + geom_point(mapping = aes(x=position, y=diversity), alpha=0.01)
ggplot(data = dvst) + geom_density(mapping = aes(x=diversity), fill="blue")
ggplot(data = dvst) + geom_density(mapping = aes(x=diversity, fill=cent), alpha=0.4)
ggplot(data = dvst, mapping = aes(x=depth, y=total.SNPs)) + geom_point(alpha=0.1) + geom_smooth()
ggplot(data = dvst, mapping = aes(x=depth, y=total.SNPs)) + geom_point(alpha=0.1) + geom_smooth()
`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = "cs")'
ggplot(data = dvst, mapping = aes(x=depth, y=percent.GC)) + geom_point(alpha=0.1) + geom_smooth()
ggplot(data = dvst, mapping = aes(x=percent.GC ,y=depth)) + geom_point(alpha=0.1) + geom_smooth()
ggplot(data = dvst) +
geom_bar(mapping = aes(x = cent))
ggplot(data = dvst) +
stat_summary(
mapping = aes(x = cent, y = percent.GC),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
dvst <- dvst %>%
mutate(GC.binned = cut(percent.GC, 5));
select(dvst, GC.binned)
ggplot(data = dvst) + geom_bar(mapping = aes(x=GC.binned))
ggplot(data = dvst) + geom_density(mapping = aes(x=depth, linetype=GC.binned), alpha=0.5)
ggplot(data = dvst) + geom_bar(mapping = aes(x=percent.GC))
